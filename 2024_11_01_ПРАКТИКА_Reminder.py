### ПРОГРАММА НАПОМИНАНИЕ
from tkinter import * # Импортируем из tkinter все функции
from tkinter import simpledialog as sd
from tkinter import messagebox as mb
import time
import datetime
import pygame

t = 0 # Создали (обозначили) переменную t для использования и присвоили нулевое значение

### Создаем функцию установки времени срабатывания
def set():
    global t  # Поскольку переменная t используется в двух функциях назначаем ее глобальной
    rem = sd.askstring(title="Время напоминания", prompt="Введите время напоминания (чч:мм)") # Создаем переменную куда введут время напоминания
    if rem: # Условие если время введено ти переменная не пустая то-
        try: # Используем обработку исключений
            hour = int(rem.split(":")[0]) # Получаем часы из введенной информацией пользователем, делаем целым числом и записываем в список с индексом 0
            minute = int(rem.split(":")[1]) # Получаем минуты из введенной информацией пользователем, делаем целым числом и записываем в список с индексом 1
            now = datetime.datetime.now() # Создаем переменную текущего времени от которого пойдет отсчет
            print(now) # Контрольный вывод информации когда ввели время для напоминания
            dt = now.replace(hour=hour, minute=minute) # Переменная времени на которое установлено наше напоминание
            print(dt) # Контрольный вывод информации когда сработает напоминание
            t = dt.timestamp() # В переменную положим текущую временную компьютерную метку
            print(t)
        except Exception as e:
            mb.showerror(title="Ошибка", message=f"Произошла ошибка {e}") # При вводе значений не в режиме часов минут обрабатываем ошибку


### Создаем функцию проверки совпадения времени (Рекурсия)
def check():
    global t  # Поскольку переменная t используется в двух функциях назначаем ее глобальной
    if t: # Цикл проверки переменной t что она не пустая
        now = time.time() # Получаем текущее временную компьютерную метку
        if now >= t: # Если текущее время больше установленного времени напоминания то
            play_snd() # То тогда включаем функцию воспроизведения музыки
            t = 0 # Переменную t обнуляем
    window.after(10000, check) # Рекурсия функция check() вызывает сама себя каждые 10 000 милисекунд


### Создаем функцию для проигрывания музыки
def play_snd():
    pygame.mixer.init() # Инициализируем миксер в pygame для проигрывания музыки
    pygame.mixer.music.load("reminder.mp3") # Команда на загрузку музыки в миксер
    pygame.mixer.music.play() # Даем команду на проигрывание музыкального файла


### Создаем графический интерфейс
window = Tk()
window.title("Напоминание") # Меняем название нашего всплывающего окна
width_d = window.winfo_screenwidth() # Создаем переменную запрашивающую ширину подключенного монитора
heidth_d = window.winfo_screenheight() # Создаем переменную запрашивающую высоту подключенного монитора
window.geometry(f"400x200+{(width_d//2)-200}+{(heidth_d//2)-100}") # Располагаем в центре окна

### Создаем метку
l = Label(text = "Установите напоминание")
l.pack(pady=10)

### Создаем кнопку
set_button = Button(text = "Установить напоминание", command=set)
set_button.pack(pady=10)

window.mainloop()